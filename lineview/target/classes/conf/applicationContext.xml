<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-4.3.xsd
        http://www.springframework.org/schema/aop 
        http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
        http://www.springframework.org/schema/tx 
        http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

    <!-- 扫描BaseDao的@AutoWired注解，为其子类注入sessionFactory -->
    <context:component-scan base-package="com.mrong.lineview.common.dao.impl" />

    <!-- 配置数据源 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="user" value="root"></property>
        <property name="driverClass" value="com.mysql.jdbc.Driver"></property>
        <!-- 
        <property name="jdbcUrl" value="jdbc:mysql://localhost:3306/budweiser?useSSL=false&amp;useUnicode=true&amp;characterEncoding=utf-8"></property>
        <property name="jdbcUrl" value="jdbc:mysql://115.159.66.245:3306/budweiser?useSSL=false&amp;useUnicode=true&amp;characterEncoding=utf-8"></property>
        <property name="password" value="Mrong666!"></property>
         -->
        <property name="password" value="940925"></property>
        <property name="jdbcUrl" value="jdbc:mysql://localhost:3306/lineview?useUnicode=true&amp;characterEncoding=utf-8"></property>
    </bean>
    <!-- 配置hibernate的sessionFactory 定义数据库的方言和映射文件的位置-->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"></property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.connection.autocommit">false</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
                <prop key="hibernate.current_session_context_class">org.springframework.orm.hibernate5.SpringSessionContext</prop>
            </props>
        </property>
        <property name="mappingLocations">
            <list>
                <value>classpath:mappingResources/User.hbm.xml</value>
                <value>classpath:mappingResources/Mode.hbm.xml</value>
                <value>classpath:mappingResources/Team.hbm.xml</value>
                <value>classpath:mappingResources/ModeRecord.hbm.xml</value>
                <value>classpath:mappingResources/Shift.hbm.xml</value>
                <value>classpath:mappingResources/WorkerRecord.hbm.xml</value>
                <value>classpath:mappingResources/Remark.hbm.xml</value>
                <value>classpath:mappingResources/MechineStopInformationBean.hbm.xml</value>
                <value>classpath:mappingResources/MachineSelfResultInfo.hbm.xml</value>
                <value>classpath:mappingResources/OnlineCheck.hbm.xml</value>
                <value>classpath:mappingResources/SpeedMachine.hbm.xml</value>
                <value>classpath:mappingResources/Breed.hbm.xml</value>
            </list>
        </property>
    </bean>

    <!-- 配置事务管理器 -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"></property>
    </bean>
    <!-- 配置事务的传播特性通知 -->
    <tx:advice id="txadvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="*"/>
        </tx:attributes>
    </tx:advice>
    <!-- 配置事务的切入点表达式关联事务 -->
    <aop:config>
        <!-- aspect是共同的代码抽取出来作为前置通知后置通知的那些（例如执行某一个方法前写日志，执行后写日志。。。 -->
        <!-- <aop:aspect ></aop:aspect> -->
        <aop:pointcut expression="execution(* com.mrong.lineview.*.service.impl.*.*(..))" id="pointcut"/>
        <aop:advisor advice-ref="txadvice"     pointcut-ref="pointcut"/>
    </aop:config>
</beans>